package insecure

import (
	"crypto/tls"
	"crypto/x509"
	"log"
)

const certPEM = `-----BEGIN CERTIFICATE-----
MIID2zCCAsOgAwIBAgIUFf/yj/snUID+yp1/z6QDhszUrR4wDQYJKoZIhvcNAQEL
BQAwajELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDEjMCEGA1UEAwwaYXBpLXJlc3Qtc3Rh
Z2UubWFwY2FyZC5wcm8wHhcNMjIxMTE1MjE0ODQ0WhcNMjUwMjE3MjE0ODQ0WjBq
MQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50
ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMSMwIQYDVQQDDBphcGktcmVzdC1zdGFnZS5t
YXBjYXJkLnBybzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANbKHwBe
iCvZNsbiNn/bM9d7kRtLMxjiOQP1P+zb7hlf4ofoUNLQgtyL7JI+BxVNVLd/2lBd
hxQ65eOGW9lhcOTZNoG7K/95U9+CyyJ/zmbCYaEpOaQOKRubzLP0Sh+LybABZm1g
jGxaBgl1zSE63EtXagUIAaJMrtZnsEMFVLdVxHuMl4G68RM6pAsK7zZiw9uEEp6U
896nEhW6gMgQQArhlqR+7vdvQlR8WTvhb2LKuFa1BUDSaktgXW/aqgNJtyCKwhn+
XNtx5STxZ0EVtsOjSCX5LbTob/zoIrD1xm41f3hdXi177rVREYerFmXQpc9KZV0X
g2th2zZXN04mIAUCAwEAAaN5MHcwHwYDVR0jBBgwFoAUpc1fS/CBB6I9tgYijyZL
7raor7cwCQYDVR0TBAIwADALBgNVHQ8EBAMCBPAwPAYDVR0RBDUwM4IaYXBpLXJl
c3Qtc3RhZ2UubWFwY2FyZC5wcm+CCWxvY2FsaG9zdIcEAAAAAIcEfwAAATANBgkq
hkiG9w0BAQsFAAOCAQEAsuWYQDC/tQU/PPsg0SGqJDwPWx4tqtyQmnWAfSydjfrx
pDvll18AHLyRf6tI05j87dR5B9yhJL5gclhJBRDmCDo/zyQo5VkqzOQgkCEIpJHQ
LtU6+tNVPapbPzkGIWPBQvA8+D3slx3lGwmWIdAfPRlY+6cU9AuijOgezUIogHEQ
R6G9LVByCPp8XS/XoeizT5nos4a2PpIt39Twv9k86PCThYVYhIs9JTB+Vfc0c9TZ
zeN7Z+a2Z4PSnjXBe+Nr+R18rgMsYzgmAMBfFVkndBbJ/hNZRtfyPBnwjnHIZNk/
miSMtP6aN/bFslOI5EOxySmorP78Tzzc2wzlPyIHAQ==
-----END CERTIFICATE-----
`

const keyPEM = `-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEA1sofAF6IK9k2xuI2f9sz13uRG0szGOI5A/U/7NvuGV/ih+hQ
0tCC3Ivskj4HFU1Ut3/aUF2HFDrl44Zb2WFw5Nk2gbsr/3lT34LLIn/OZsJhoSk5
pA4pG5vMs/RKH4vJsAFmbWCMbFoGCXXNITrcS1dqBQgBokyu1mewQwVUt1XEe4yX
gbrxEzqkCwrvNmLD24QSnpTz3qcSFbqAyBBACuGWpH7u929CVHxZO+FvYsq4VrUF
QNJqS2Bdb9qqA0m3IIrCGf5c23HlJPFnQRW2w6NIJfkttOhv/OgisPXGbjV/eF1e
LXvutVERh6sWZdClz0plXReDa2HbNlc3TiYgBQIDAQABAoIBAQDWj2P2n3gRrVON
yw28HQGlgNdMV4t8kQd5j7VC69PmXyVQtF6AqTAAFnrE/9ddjTlScRJpc3RrXgal
iWMZPMBkqyNK5umls9J4FRTMqrVJa2XRcvgUjNy9qp4LKb4d0ysvecaS/n5oAmnD
a3z1c/H6BSFwUzYmpcmFfmDSInIlDGCsz6GpToxjU6lGHrmqn2/JrHVFl/8lYil0
i/XkugF27QDqDs5aG4ofJpGVyRaRvS92+FEjUcNfmztrtpdodhlE8pAP0Z/wuvCI
SmaZtcR1Ysf23L88Ll7IeoqjRXgmn+uRPttPS8bPY47J9SIU/ay243kIp8PaU6jf
MYMuM/8FAoGBAPCSncRDx3WoneroWJPd841350DBZycLwRRhpMoLdPYGKZdDxVid
bQH4GJ/upobc03/5Y0ljX7F892rKS+hMJYO+tjAVz3N4vJe964lI0ApqWQDfKR/Z
Qf1R2UqrXLrH705bsmHcVLFHSRwUM+wOxprSkz/vGg6fs4vMRytvkk3LAoGBAOSQ
O5x3P7dE3oBDljj50pvE08a7IFp1sY+7vFw2hT/jDnTXUtU/DBfIwz5PuehmGuDF
jgwDag3G8VRg9EDzYe5KKVvcNHMeeggqIYWIUyHOy7XP9k8STJJ6yIHyldBbMuK3
X0JZ4IFCJcNOb0Mrm5SCN/E4ylGBE7CKY1/0ho9vAoGBAKJgo+JUSW3uKODkgN0V
g42qL8mygPiG44TpPzwsrX5dvHbgBHUClRAuMBjLEVWX+Z24a76eN3nqOmm3L7MU
qoGZGQmtvv9WsBzP0QoxvlI5Y+fFuNFJaFQeicbvkUB1MN434FhTSkr6LaupKz6a
3oyjs0YFEhZqztp+QE9eGGcvAoGBAKPSETfjbOKx1Px/9OMfhGmrWNMe+mB77OmF
eMtrNHSHDKyITNGVX9iISBCYWjqNPISQdHB93fzD8+Mznr4S88U0mJJDscA1Pugt
MlugS112+CF3TiZ8ii+PG7mwItr1EvLW1csb2kMrIx/qTusJDXkTIH+f4bsrVe56
MiHrhKq3AoGARD7tU7zzSfVEPRdB0n/9cMnBYMNXX7pxLE6R1gsC19qSzfex3kRa
gH3erNzubQmmZZYjUYci+MEcVHuINX+2TzIlJJf2gi/3+EbeVra1IgIbpV3FCcDE
18HljFX3G2n+/uxTdtUpMqkdTz5fR1ND3/u4if0YZnAnn7xGW8Zivow=
-----END RSA PRIVATE KEY-----
`

var (
	// Cert is a self signed certificate
	Cert tls.Certificate
	// CertPool contains the self signed certificate
	CertPool *x509.CertPool
)

func init() {
	var err error
	Cert, err = tls.X509KeyPair([]byte(certPEM), []byte(keyPEM))
	if err != nil {
		log.Fatalln("Failed to parse key pair:", err)
	}
	Cert.Leaf, err = x509.ParseCertificate(Cert.Certificate[0])
	if err != nil {
		log.Fatalln("Failed to parse certificate:", err)
	}

	CertPool = x509.NewCertPool()
	CertPool.AddCert(Cert.Leaf)
}
