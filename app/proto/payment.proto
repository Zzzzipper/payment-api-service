syntax="proto3";

package payment;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "payment/api/api_types.proto";
import "payment/api/block_types.proto";
import "payment/api/charge_types.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "/proto;payment";

// BloomRPC meta: {"authorization": "Basic dXNlcjoxMjM0"}
// These annotations are used when generating the OpenAPI file.
/*
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "0.1.0";
  };
  external_docs: {
    url: "https://gitlab.mapcard.pro/external-map-team/payment-api-service";
    description: "Payment API service repository";
  }
  schemes:[HTTP,HTTPS];
};
*/

service PaymentService {
  // Block
  //
  // {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
  // It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
  //
  // {{import "tables.md"}}
  rpc Block(payment.api.BlockRequest) returns (payment.api.BlockHandler) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/block
      post: "/api/v1/block",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Dms авторизация",
      description: "Dms авторизация.",
      tags: "API"
    };
  }
  rpc Charge(payment.api.ChargeRequest) returns (payment.api.ChargeHandler) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/charge
      post: "/api/v1/charge",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Dms списание",
      description: "Dms списание.",
      tags: "API"
    };
  }
  rpc Get(payment.api.Order) returns (payment.api.OrderStatus) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/get
      post: "/api/v1/get",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Статус заказа",
      description: "Статус заказа.",
      tags: "API"
    };
  }
  rpc Init(payment.api.OrderRequest) returns (payment.api.Order) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/init
      post: "/api/v1/init",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Инициализация заказа",
      description: "Инициализация заказа.",
      tags: "API"
    };
  } 
  rpc Pay(payment.api.PayRequest) returns (payment.api.Payment) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/pay
      post: "/api/v1/pay",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Sms payment",
      description: "Sma payment.",
      tags: "API"
    };
  }
  rpc Payout(payment.api.PayoutRequest) returns (payment.api.PayoutHandler) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/payout
      post: "/api/v1/payout",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Oct выплата",
      description: "Oct выплата.",
      tags: "API"
    };
  }
  rpc Refund(payment.api.Order) returns (payment.api.RefundHandler) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/refund
      post: "/api/v1/refund",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Возврат по заказу",
      description: "Возврат по заказу.",
      tags: "API"
    };
  }
  rpc Void(payment.api.Order) returns (payment.api.VoidHandler) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/void
      post: "/api/v1/void",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Отмена заказа",
      description: "Отмена заказа.",
      tags: "API"
    };
  }
}

