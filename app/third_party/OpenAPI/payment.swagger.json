{
  "swagger": "2.0",
  "info": {
    "title": "proto/payment.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/block": {
      "post": {
        "summary": "Dms авторизация",
        "description": "Dms авторизация.",
        "operationId": "PaymentService_Block",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/paymentBlockHandler"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentBlockRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/api/v1/charge": {
      "post": {
        "summary": "Dms списание",
        "description": "Dms списание.",
        "operationId": "PaymentService_Charge",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/paymentChargeHandler"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentChargeRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/api/v1/get": {
      "post": {
        "summary": "Статус заказа",
        "description": "Статус заказа.",
        "operationId": "PaymentService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/paymentOrderStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentOrder"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/api/v1/init": {
      "post": {
        "summary": "Инициализация заказа",
        "description": "Инициализация заказа.",
        "operationId": "PaymentService_Init",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/paymentOrder"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentOrderRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/api/v1/pay": {
      "post": {
        "summary": "Sms payment",
        "description": "Sma payment.",
        "operationId": "PaymentService_Pay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/paymentPayment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentPayRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/api/v1/payout": {
      "post": {
        "summary": "Oct выплата",
        "description": "Oct выплата.",
        "operationId": "PaymentService_Payout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/paymentPayoutHandler"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentPayoutRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/api/v1/refund": {
      "post": {
        "summary": "Возврат по заказу",
        "description": "Возврат по заказу.",
        "operationId": "PaymentService_Refund",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/paymentRefundHandler"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentOrder"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/api/v1/void": {
      "post": {
        "summary": "Отмена заказа",
        "description": "Отмена заказа.",
        "operationId": "PaymentService_Void",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/paymentVoidHandler"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentOrder"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    }
  },
  "definitions": {
    "paymentBlockHandler": {
      "type": "object",
      "properties": {
        "Success": {
          "type": "boolean",
          "format": "true,false",
          "description": "Флаг успешности операции\ttrue/false"
        },
        "OrderId": {
          "type": "string",
          "format": "string",
          "description": "Идентификатор платежа в системе Продавца"
        },
        "Amount": {
          "type": "integer",
          "format": "integer",
          "description": "Заблокированная сумма. Передается, если в ответе Success=true"
        },
        "AuthCode": {
          "type": "string",
          "format": "string",
          "description": "Код авторизации"
        },
        "ErrCode": {
          "type": "string",
          "format": "string",
          "description": "Описание ошибки. Передается, если в ответе Success=false"
        },
        "ErrMessage": {
          "type": "string",
          "format": "string",
          "description": "Опциональный параметр. Дополнительное описание ошибки"
        },
        "ACSUrl": {
          "type": "string",
          "format": "string",
          "description": "Адрес (URL/URI) сервера аутентификации 3-D Secure. Обязателен, если карта вовлечена в технологию 3-D Secure и Success=true"
        },
        "PaReq": {
          "type": "string",
          "format": "string",
          "description": "Запрос на аутентификацию 3-D Secure. Обязателен, если карта вовлечена в технологию 3-D Secure и Success=true"
        },
        "ThreeDSKey": {
          "type": "string",
          "format": "string",
          "description": "Уникальный идентификатор транзакции. Обязателен, если карта вовлечена в технологию 3-D Secure и Success=true"
        },
        "RRN": {
          "type": "string",
          "format": "string",
          "description": "RRN операции"
        },
        "PANMask": {
          "type": "string",
          "format": "string",
          "description": "Маскированный номер карты в формате 123456xxxxxx1234"
        },
        "BankName": {
          "type": "string",
          "format": "string",
          "description": "Наименование Банка-эмитента"
        },
        "ProcessingResponse": {
          "type": "string",
          "format": "string",
          "description": "Оригинальный отказ эквайера"
        },
        "CustomParams": {
          "format": "object",
          "$ref": "#/definitions/paymentKeyValueArray",
          "description": "Список дополнительных параметров операции"
        },
        "FeePercent": {
          "type": "integer",
          "format": "integer",
          "description": "Ставка комиссии за эквайринг"
        },
        "TerminalID": {
          "type": "integer",
          "format": "integer",
          "description": "ID терминала в системе MAP, по которому фактически выполнена операция"
        },
        "SourceOffice": {
          "type": "string",
          "format": "string",
          "description": "Идентификатор организации при оплате в GDS"
        }
      }
    },
    "paymentBlockRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "string",
          "description": "Идентификатор Продавца. Выдается с параметрами тестового/боевого доступа"
        },
        "card": {
          "format": "object",
          "$ref": "#/definitions/paymentPayInfo",
          "description": "Данные карты для совершения транзакции"
        },
        "payment_token": {
          "format": "object",
          "$ref": "#/definitions/paymentPaymentToken",
          "description": "Токен gpay/applepay/samsungpay"
        },
        "merchant_order_id": {
          "type": "string",
          "format": "string",
          "description": "Идентификатор платежа в системе Продавца"
        },
        "amount": {
          "type": "integer",
          "format": "integer",
          "description": "Сумма платежа в копейках (или другая минимальная единица валюты терминала)"
        },
        "credential": {
          "format": "object",
          "$ref": "#/definitions/paymentCredential",
          "description": "Подтверждение прав доступа и информация об операторе"
        },
        "custom_params_rdy": {
          "format": "object",
          "$ref": "#/definitions/paymentKeyValueArray",
          "description": "Список дополнительных параметров операции в формате 'ключ - значение'"
        },
        "split": {
          "format": "object",
          "$ref": "#/definitions/paymentSplit",
          "description": "Используется для разделение суммы произведенного списания на составные части для последующих расчетов с контрагентами. Общая сумма всех составных частей должна соответствовать amount"
        },
        "payout_info": {
          "format": "object",
          "$ref": "#/definitions/paymentPayoutInfo",
          "description": "Номер карты для зачисления средств, обязательный при операция C2C"
        }
      }
    },
    "paymentChargeHandler": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "paymentChargeRequest": {
      "type": "object",
      "properties": {
        "block": {
          "$ref": "#/definitions/paymentBlockHandler"
        }
      }
    },
    "paymentCredential": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "format": "string",
          "description": "Логин держателя карты, зарегистрированного в системе Продавца. Используются только в случае, если карта сохранена к конкретному пользователю"
        },
        "password": {
          "type": "string",
          "format": "string",
          "description": "Пароль держателя карты, зарегистрированного в системе Продавца. Используются только в случае, если карта сохранена к конкретному пользователю"
        },
        "merchant_name": {
          "type": "string",
          "format": "string",
          "description": "Наименование продавца. Используются только в случае, если карта сохранена за Мерчантом"
        },
        "merchant_password": {
          "type": "string",
          "format": "string",
          "description": "Пароль Мерчанта для совершения операций. Используются только в случае, если карта сохранена за Мерчантом"
        },
        "terminal_password": {
          "type": "string",
          "format": "string",
          "description": "Пароль терминала для совершения операций. Используются только в случае, если карта сохранена за терминалом"
        }
      }
    },
    "paymentKeyValue": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "format": "string",
          "description": "Ключ значения"
        },
        "Value": {
          "type": "string",
          "format": "string",
          "description": "Значение"
        }
      }
    },
    "paymentKeyValueArray": {
      "type": "object",
      "properties": {
        "key_value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentKeyValue"
          },
          "description": "Массив ключ-значение"
        }
      }
    },
    "paymentOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "paymentOrderRequest": {
      "type": "object"
    },
    "paymentOrderStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "paymentPayInfo": {
      "type": "object",
      "properties": {
        "pan": {
          "type": "string",
          "format": "string",
          "description": "Номер карты"
        },
        "emonth": {
          "type": "integer",
          "format": "integer",
          "description": "Месяц истечения срока действия карты"
        },
        "eyear": {
          "type": "integer",
          "format": "integer",
          "description": "Год истечения срока действия карты"
        },
        "cvv": {
          "type": "integer",
          "format": "integer",
          "description": "CVC2/CVV2. Параметр является опциональным"
        },
        "card_holder": {
          "type": "string",
          "format": "string",
          "description": "Фамилия и имя держателя карты"
        },
        "uid": {
          "type": "string",
          "format": "string",
          "description": "Идентификатор карты в системе theMAP или значение «Random». При указании значения «Random» выбирается случайная карта из привязанных к данному пользователю"
        }
      }
    },
    "paymentPayRequest": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/paymentOrder"
        }
      }
    },
    "paymentPayment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "paymentPaymentToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "format": "string",
          "description": "Тип токена"
        },
        "data": {
          "type": "string",
          "format": "string",
          "description": "Данные токена"
        }
      }
    },
    "paymentPayoutHandler": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "paymentPayoutInfo": {
      "type": "object",
      "properties": {
        "pan": {
          "type": "string",
          "format": "string",
          "description": "Номер карты для зачисления средств, обязательный при операция C2C"
        }
      }
    },
    "paymentPayoutRequest": {
      "type": "object"
    },
    "paymentRefundHandler": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "paymentSplit": {
      "type": "object",
      "properties": {
        "split_terminal_id": {
          "type": "integer",
          "format": "integer",
          "description": "Номер терминала для проведения операции"
        },
        "amount": {
          "type": "integer",
          "format": "integer",
          "description": "Сумма разделения"
        },
        "purpose": {
          "type": "string",
          "format": "string",
          "description": "Описание"
        },
        "fee": {
          "type": "integer",
          "format": "integer",
          "description": "Размер комиссии"
        }
      }
    },
    "paymentVoidHandler": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
